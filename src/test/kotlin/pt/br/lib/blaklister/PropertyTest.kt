/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package pt.br.lib.blaklister

import org.amshove.kluent.`should be`
import org.amshove.kluent.`should equal`
import pt.br.lib.blaklister.config.BlacklistConfig
import pt.br.lib.blaklister.delegate.IgnorableProperty
import pt.br.lib.blaklister.repository.BooleanMapDataRepository
import pt.br.lib.blaklister.repository.StringMapDataRepository
import pt.br.lib.blaklister.repository.UUIDEntity
import java.util.UUID
import kotlin.test.Test

val map: MutableMap<UUID, MutableMap<String, Any>> = mutableMapOf()

class TestableEntity(override val blacklist: BlacklistConfig) : UUIDEntity() {
    var name: String? by IgnorableProperty(StringMapDataRepository(map))
    var isNew: Boolean? by IgnorableProperty(BooleanMapDataRepository(map))
}

class PropertyTest {

    @Test
    fun testDelegatedProps1() {
        val entity = TestableEntity(BlacklistConfig({}.javaClass.getResourceAsStream("/blaklistTest1.yaml")))
        entity.name = "Test 1"
        entity.isNew = true
        entity.name `should equal` "Test 1"
        entity.isNew `should be` null
    }

    @Test
    fun testDelegatedProps2() {
        val entity = TestableEntity(BlacklistConfig({}.javaClass.getResourceAsStream("/blaklistTest2.yaml")))
        entity.name = "Test 1"
        entity.isNew = true
        entity.name `should equal` null
        entity.isNew `should be` true
    }
}
